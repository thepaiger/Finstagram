{"ast":null,"code":"var _jsxFileName = \"/Users/paigehoeppner/general_assembly/pawpaw/projects/Finstagram/client/src/containers/MainContainer.jsx\",\n    _s = $RefreshSig$();\n\n// Packages\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\"; // Screens\n\nimport MainFeed from \"../screens/MainFeed/MainFeed\";\nimport PostCreate from \"../screens/PostCreate/PostCreate\";\nimport PostEdit from \"../screens/PostEdit/PostEdit\"; // Services\n\nimport { deletePost, getAllPosts, postPost, putPost } from \"../services/posts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MainContainer(_ref) {\n  _s();\n\n  let {\n    currentUser\n  } = _ref;\n  const [posts, setPosts] = useState([]);\n  const history = useHistory();\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const postList = await getAllPosts();\n      setPosts(postList);\n    };\n\n    if (currentUser) fetchPosts(); // test if this works\n    // (currentUser && fetchPosts());\n  }, [currentUser]);\n\n  const handlePostCreate = async formData => {\n    const newPost = await postPost(formData);\n    setPosts(prevState => [...prevState, newPost]);\n    history.push(\"/\");\n  };\n\n  const handlePostUpdate = async (post_id, formData) => {\n    const newPost = await putPost(post_id, formData);\n    setPosts(prevState => prevState.map(post => {\n      return post.id === Number(post_id) ? newPost : post;\n    }));\n    history.push(\"/\");\n  };\n\n  const handlePostDelete = async post_id => {\n    await deletePost(post_id);\n    setPosts(prevState => prevState.filter(post => {\n      return post.id !== Number(post_id);\n    }));\n    history.push(\"/\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile/:user_id/feed\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"SingleUserFeed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/profile/:user_id\",\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"UserProfile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/edit-post/:post_id\",\n        children: /*#__PURE__*/_jsxDEV(PostEdit, {\n          posts: posts,\n          handlePostUpdate: handlePostUpdate,\n          handlePostDelete: handlePostDelete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/create-post\",\n        children: /*#__PURE__*/_jsxDEV(PostCreate, {\n          handlePostCreate: handlePostCreate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        children: /*#__PURE__*/_jsxDEV(MainFeed, {\n          posts: posts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MainContainer, \"LMnqXJ5SNk+GlN1YCaRjc/7UFkI=\", false, function () {\n  return [useHistory];\n});\n\n_c = MainContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainContainer\");","map":{"version":3,"sources":["/Users/paigehoeppner/general_assembly/pawpaw/projects/Finstagram/client/src/containers/MainContainer.jsx"],"names":["useState","useEffect","Switch","Route","useHistory","MainFeed","PostCreate","PostEdit","deletePost","getAllPosts","postPost","putPost","MainContainer","currentUser","posts","setPosts","history","fetchPosts","postList","handlePostCreate","formData","newPost","prevState","push","handlePostUpdate","post_id","map","post","id","Number","handlePostDelete","filter"],"mappings":"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","sourcesContent":["// Packages\nimport { useState, useEffect } from \"react\";\nimport { Switch, Route, useHistory } from \"react-router-dom\";\n\n// Screens\nimport MainFeed from \"../screens/MainFeed/MainFeed\";\nimport PostCreate from \"../screens/PostCreate/PostCreate\";\nimport PostEdit from \"../screens/PostEdit/PostEdit\";\n\n// Services\nimport { deletePost, getAllPosts, postPost, putPost } from \"../services/posts\";\n\nexport default function MainContainer({ currentUser }) {\n  const [posts, setPosts] = useState([]);\n  const history = useHistory();\n\n  useEffect(() => {\n    const fetchPosts = async () => {\n      const postList = await getAllPosts();\n      setPosts(postList);\n    };\n    if (currentUser) fetchPosts();\n    // test if this works\n    // (currentUser && fetchPosts());\n  }, [currentUser]);\n\n  const handlePostCreate = async (formData) => {\n    const newPost = await postPost(formData);\n    setPosts((prevState) => [...prevState, newPost]);\n    history.push(\"/\");\n  };\n\n  const handlePostUpdate = async (post_id, formData) => {\n    const newPost = await putPost(post_id, formData);\n    setPosts((prevState) =>\n      prevState.map((post) => {\n        return post.id === Number(post_id) ? newPost : post;\n      }));\n    history.push(\"/\");\n  };\n\n  const handlePostDelete = async (post_id) => {\n    await deletePost(post_id);\n    setPosts((prevState) => prevState.filter((post) => {\n      return post.id !== Number(post_id)\n    }));\n    history.push(\"/\");\n  };\n\n  return (\n    <main>\n      <Switch>\n        <Route path=\"/profile/:user_id/feed\">\n          <h2>SingleUserFeed</h2>\n        </Route>\n        <Route path=\"/profile/:user_id\">\n          <h2>UserProfile</h2>\n        </Route>\n        <Route path=\"/edit-post/:post_id\">\n          <PostEdit\n            posts={posts}\n            handlePostUpdate={handlePostUpdate}\n            handlePostDelete={handlePostDelete}\n          />\n        </Route>\n        <Route path=\"/create-post\">\n          <PostCreate handlePostCreate={handlePostCreate} />\n        </Route>\n        <Route path=\"/\">\n          <MainFeed posts={posts} />\n        </Route>\n      </Switch>\n    </main>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}